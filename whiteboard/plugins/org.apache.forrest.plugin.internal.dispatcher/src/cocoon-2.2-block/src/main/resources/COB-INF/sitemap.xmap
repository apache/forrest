<?xml version="1.0" encoding="utf-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<map:sitemap xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://apache.org/cocoon/sitemap/1.0 http://cocoon.apache.org/schema/sitemap/cocoon-sitemap-1.0.xsd"
xmlns:map="http://apache.org/cocoon/sitemap/1.0">
  <map:pipelines>
    <map:pipeline id="lm">
      <map:match pattern="locationmap.xml">
        <map:generate src="locationmap.xml" />
        <map:serialize type="xml" />
      </map:match>
    </map:pipeline>
    <map:pipeline id="dispatcher">
      <map:match pattern="**.html">
        <map:generate src="lm://resolve.structurer.{1}" type="jx">
          <map:parameter name="lenient-xpath" value="true" />
          <map:parameter name="getRequest" value="{1}" />
          <map:parameter name="contextPath" value="{request:contextPath}" />
          <map:parameter name="getRequestExtension" value="html" />
        </map:generate>
        <map:transform type="dispatcher">
          <map:parameter name="cacheKey" value="{0}" />
          <map:parameter name="validityFile"
          value="lm://resolve.structurer.{1}" />
          <map:parameter name="request" value="{1}" />
          <map:parameter name="type" value="html" />
        </map:transform>
        <map:transform src="lm://hooks-to-html.xsl" />
        <map:transform src="lm://namespace-stripped" />
        <map:transform src="lm://strip-dispatcher-remains-html.xsl" />
        <map:serialize type="xhtml" />
      </map:match>
      <map:match pattern="**.fo">
        <map:generate src="lm://resolve.structurer.{1}" type="jx">
          <map:parameter name="lenient-xpath" value="true" />
          <map:parameter name="getRequest" value="{1}" />
          <map:parameter name="getRequestExtension" value="fo" />
          <map:parameter name="contextPath" value="{request:contextPath}" />
        </map:generate>
        <map:transform type="dispatcher">
          <map:parameter name="cacheKey" value="{0}" />
          <map:parameter name="validityFile"
          value="lm://resolve.structurer.{1}" />
          <map:parameter name="request" value="{1}" />
          <map:parameter name="type" value="fo" />
        </map:transform>
        <map:transform src="lm://hooks-to-fo.xsl" />
        <map:transform src="lm://strip-dispatcher-remains-fo.xsl" />
        <map:serialize type="xml" />
      </map:match>
      <map:match pattern="**.prepare.dispatcher.css">
        <map:generate src="lm://resolve.structurer.{1}" type="jx">
          <map:parameter name="lenient-xpath" value="true" />
          <map:parameter name="getRequest" value="{1}" />
          <map:parameter name="getRequestExtension" value="css" />
          <map:parameter name="contextPath" value="{request:contextPath}" />
        </map:generate>
        <map:transform type="dispatcher">
          <map:parameter name="cacheKey" value="{0}" />
          <map:parameter name="validityFile"
          value="lm://resolve.structurer.{1}" />
          <map:parameter name="dispatcher.caching"
          value="{global:dispatcher.caching}" />
          <map:parameter name="request" value="{1}" />
          <map:parameter name="type" value="css" />
        </map:transform>
        <map:serialize type="text" />
      </map:match>
      <map:match pattern="**.dispatcher.css">
        <map:generate type="text" src="cocoon://{1}.prepare.dispatcher.css" />
        <map:transform type="pattern"
        src="resource/chaperon/grammars/link.xlex" />
        <map:transform src="resource/chaperon/stylesheets/pattern2link.xsl" />
        <map:serialize type="text" mime-type="text/css" />
      </map:match>
    </map:pipeline>
    <map:pipeline id="contracts">
      <map:act type="locale">
        <map:match pattern="resolve.structurer.**">
          <map:generate src="lm://resolve.structurer.{1}" />
          <map:serialize type="xml" />
        </map:match>
        <map:match pattern="resolve.contract.*.**">
          <map:generate src="{lm:resolve.contract.{1}.{2}}" />
          <map:serialize type="xml" />
        </map:match>
        <map:match pattern="prepare.contract.*.**">
          <map:generate src="{lm:resolve.contract.{1}.{2}}" />
          <map:transform src="{lm:contract-strip-xsl.xsl}" />
          <map:transform type="i18n">
            <map:parameter name="locale" value="{../locale}" />
          </map:transform>
          <map:serialize type="xml" />
        </map:match>
      </map:act>
    </map:pipeline>
    <map:pipeline id="structurer">
      <!-- You can group elements to a template and call it from any view. 
      <jx:import uri="cocoon://prepare.panels.export-link"/>
      -->
      <map:match pattern="prepare.panels.**">
        <map:generate src="{lm:resolve.panels.{1}}" />
        <map:transform src="{lm:root-strip.xsl}" />
        <map:serialize type="xml" />
      </map:match>
    </map:pipeline>
    <map:pipeline>
      <map:match pattern="**.props">
        <map:generate src="servlet:propertiesGenerator:/module.global.properties" />
        <map:transform src="resource/stylesheets/variable.helper.xsl">
          <map:parameter name="path" value="{1}.html" />
          <map:parameter name="theme" value="{global:dispatcher.theme}" />
        </map:transform>
        <map:serialize type="xml" />
      </map:match>
    </map:pipeline>
    <map:pipeline id="resources">
      <map:match pattern="themes/**.css">
        <map:read mime-type="text/css" src="{lm:themes/{1}.css}" />
      </map:match>
      <map:match pattern="themes/**.js">
        <map:read mime-type="application/x-javascript"
        src="{lm:themes/{1}.js}" />
      </map:match>
      <map:match pattern="themes/images/**.*">
        <map:match type="regexp" pattern="(.*\.)(jpg|JPG|Jpg|jpeg|Jpeg|JPEG)$">
          <map:read src="{lm:{1}{2}}" mime-type="image/jpeg" />
          <!--<map:read mime-type="image/jpg" src="http://preproduccion.andaluciajunta.es/portalv4/img/{1}{2}"/>-->
        </map:match>
        <map:match type="regexp" pattern="(.*)(gif|GIF|Gif)$">
          <map:read src="{lm:{1}{2}}" mime-type="image/gif" />
          <!--<map:read mime-type="image/jpg" src="http://preproduccion.andaluciajunta.es/portalv4/img/{1}{2}"/>-->
        </map:match>
        <map:match type="regexp" pattern="(.*)(png|PNG|Png)$">
          <map:read src="{lm:{1}{2}}" mime-type="image/png" />
        </map:match>
        <map:match type="regexp" pattern="(.*)(ico|ICO|Ico)$">
          <map:read mime-type="image/x-icon" src="{lm:{1}{2}}" />
        </map:match>
      </map:match>
    </map:pipeline>
    <map:pipeline id="listing">
      <map:mount uri-prefix="" src="ls.xmap" check-reload="yes" />
    </map:pipeline>
  </map:pipelines>
</map:sitemap>
