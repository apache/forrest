<?xml version="1.0" encoding="utf-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<forrest:contract xmlns:i18n="http://apache.org/cocoon/i18n/2.1"
xmlns:forrest="http://apache.org/forrest/templates/1.0" name="content-css">
  <description>
    <warning>Use at your own risk!!!</warning>
    <note>Allowing and activating abitrary styles has its danger. The problem
    is that Forrest attempts to provide a unified output formats regardless of
    the input format. If you use this contract and allow arbitrary styles
    through then forrest loose the ability to do this because user can create
    "headings" by making text larger and bold, for example. Forrest has no way
    of knowing this is supposed to be a heading and therefore cannot render it
    as such.</note>
    <p>This contract picks up the style element of the input and pass it
    through to the output.</p>
  </description>
  <usage>
    <![CDATA[<forrest:contract name="content-css" 
  dataURI="cocoon://#{$getRequest}.body.xml"/>]]>
</usage>
  <forrest:template xmlns:forrest="http://apache.org/forrest/templates/1.0"
  name="content-css" inputFormat="xsl">
    <xsl:stylesheet version="1.1"
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
      <xsl:template match="/">
        <forrest:content>
          <forrest:part xpath="/html/head">
            <xsl:apply-templates select="//style" />
          </forrest:part>
        </forrest:content>
      </xsl:template>
      <xsl:template match="style">
        <style type="text/css">
          <xsl:value-of select="." />
        </style>
      </xsl:template>
    </xsl:stylesheet>
  </forrest:template>
</forrest:contract>
