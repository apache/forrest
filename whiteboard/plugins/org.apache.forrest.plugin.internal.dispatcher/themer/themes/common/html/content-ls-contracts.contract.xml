<?xml version="1.0" encoding="utf-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<forrest:contract name="content-ls-contracts" type="nugget"
xmlns:forrest="http://apache.org/forrest/templates/1.0">
  <description>content-ls-contracts will output the contracts provided by the
  themer plugin (the org.apache.forrest.plugin.input.viewHelper.xhtml.ls needs
  to be installed!).</description>
  <usage>
    <![CDATA[<forrest:contract name="content-ls-contracts">
  <forrest:properties contract="content-ls-contracts">
    <forrest:property name="content-ls-contracts" 
      nugget="get.nugget.ls.contracts">
      <jx:import uri="cocoon://ls.contracts.xml"/>
    </forrest:property>
    <forrest:property name="content-ls-contracts-config" file="true" 
      description="false" usage="true" path="false"/>
  </forrest:properties>
</forrest:contract>]]>
</usage>
  <forrest:template xmlns:forrest="http://apache.org/forrest/templates/1.0"
  format="html" name="content-ls-contracts" inputFormat="xsl" body="true"
  head="false">
    <xsl:stylesheet version="1.1"
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
      <xsl:template name="content-ls-contracts-body">
        <xsl:param name="content-ls-contracts" />
        <xsl:param name="content-ls-contracts-config" />
        <div id="content-ls-contracts">
          <xsl:apply-templates select="$content-ls-contracts/document">
            <xsl:with-param name="content-ls-contracts-config"
            select="$content-ls-contracts-config" />
          </xsl:apply-templates>
        </div>
      </xsl:template>
      <xsl:template match="document">
        <xsl:param name="content-ls-contracts-config" />
        <xsl:if test="normalize-space(header/title)!=''">
          <h1>
            <xsl:value-of select="header/title" />
          </h1>
          <xsl:apply-templates select="body/section">
            <xsl:with-param name="content-ls-contracts-config"
            select="$content-ls-contracts-config" />
          </xsl:apply-templates>
        </xsl:if>
      </xsl:template>
      <xsl:template match="section">
        <xsl:param name="content-ls-contracts-config" />
        <!-- count the number of section in the ancestor-or-self axis to compute
                 the title element name later on -->
        <xsl:variable name="sectiondepth"
        select="count(ancestor-or-self::section)" />
        <!-- generate a title element, level 1 -> h3, level 2 -> h4 and so on... -->
        <xsl:element name="{concat('h',$sectiondepth + 2)}">
          <xsl:value-of select="title" />
        </xsl:element>
        <xsl:apply-templates select="*[not(self::title)]">
          <xsl:with-param name="content-ls-contracts-config"
          select="$content-ls-contracts-config" />
        </xsl:apply-templates>
      </xsl:template>
      <xsl:template match="source">
        <pre class="code">
          
<xsl:apply-templates />
        
</pre>
      </xsl:template>
      <xsl:template match="p[@class='file']">
        <xsl:param name="content-ls-contracts-config" />
        <xsl:if test="$content-ls-contracts-config[@file='true']">
          <p class="{@class}">
            <xsl:apply-templates />
          </p>
        </xsl:if>
      </xsl:template>
      <xsl:template match="p[@class='description']">
        <xsl:param name="content-ls-contracts-config" />
        <xsl:if test="$content-ls-contracts-config[@description='true']">
          <p class="{@class}">
            <xsl:apply-templates />
          </p>
        </xsl:if>
      </xsl:template>
      <xsl:template match="p[@class='usage']">
        <xsl:param name="content-ls-contracts-config" />
        <xsl:if test="$content-ls-contracts-config[@usage='true']">
          <p class="{@class}">
            <xsl:apply-templates />
          </p>
        </xsl:if>
      </xsl:template>
      <xsl:template match="p[@class='realpath']">
        <xsl:param name="content-ls-contracts-config" />
        <xsl:if test="$content-ls-contracts-config[@realpath='true']">
          <p class="{@class}">
            <xsl:apply-templates />
          </p>
        </xsl:if>
      </xsl:template>
      <xsl:template match="p" />
    </xsl:stylesheet>
  </forrest:template>
</forrest:contract>
