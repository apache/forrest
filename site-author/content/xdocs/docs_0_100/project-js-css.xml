<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V2.0//EN" "http://forrest.apache.org/dtd/document-v20.dtd">
<?demo js-css?>
<document>
  <header>
    <title>Using extra project JavaScript and CSS resources</title>
    <link rel="stylesheet" type="text/css" href="../css/demo-js-css-1.css"/>
    <link rel="stylesheet" type="text/css" href="../skin/demo-js-css-2.css"/>
    <script src="../scripts/demo-js-css-1.js" type="text/javascript"/>
<!-- scripts/demo-js-css-2.js is injected later by a transformer. -->
    <script src="../skin/demo-js-css-3.js" type="text/javascript"/>
  </header>
  <body>
    <section id="intro">
      <title>Introduction</title>
      <p>
        There are various ways for your project to provide additional
        JavaScript and Cascading Style Sheets.
        The chosen <a href="site:skins">skin</a> already provides many.
        Your project can supplement that, and provide additional capabilities
        for your whole site or for specific pages.
      </p>
      <p>
        Note that the new Dispatcher capability provides its own more powerful techniques.
        See <a href="site:status-themes">Status of Themes: Skins and Dispatcher</a>.
        Still, some of the techniques described below are relevant.
      </p>
    </section>
    <section id="demo">
      <title>Demonstration</title>
      <p id="demo-js-css-1" class="demo-js-css">
        Demonstration #1:<br/>
      </p>
      <p id="demo-js-css-2" class="demo-js-css">
        Demonstration #2:<br/>
      </p>
      <p id="demo-js-css-3" class="demo-js-css">
        Demonstration #3:<br/>
      </p>
    </section>
    <section id="how">
      <title>How</title>
      <section id="overview">
        <title>Overview</title>
        <p>
          The "link" and "script" elements can be added to the head section of
          your source xml or source html documents.
          The project sitemap can add a Transformer to inject additional
          elements to the internal xml.
          The "Content Aware Pipelines" can detect certain documents to apply such.
          The sitemaps and locationmaps resolve the linked resources by searching
          through a set of known locations in your project.
        </p>
      </section>
      <fixme author="open">
        Add explanations of each.
      </fixme>
      <p>
        ####
      </p>
    </section>
    <section id="examples">
      <title>Examples</title>
      <section id="example-d3">
        <title>D3.js Data Driven Documentation</title>
        <p>
          Hooking up
          <a href="http://d3js.org/">D3.js</a> is very easy, as shown there.
          After declaring the "script" element in the header of your source,
          then add one of the example snippets to your project JS.
          The "randomly color paragraphs" example is a quick test that you are
          up and running.
        </p>
        <p>
          Obviously it is a very powerful combination to use D3 together with
          Forrest's ability to gather, co-ordinate, and transform data.
        </p>
      </section>
      <section id="example-leaflet">
        <title>Leaflet</title>
        <p>
          Follow the excellent 
          <a href="http://bost.ocks.org/mike/leaflet/">example</a>
          "using D3 to render GeoJSON shapes in conjunction with Leaflet".
        </p>
        <p>
          Forrest will automatically find the CSS and JS when you place them
          in the corresponding "project resources" directories as explained above.
        </p>
        <p>
          In this case we need to help Forrest find the images that are used by
          the Leaflet CSS. For example, it is looking for the resource
          <code>css/images/zoom-in.png</code> (i.e. relative to its CSS file).
        </p>
        <p>
          However, the default machinery in Forrest for locating images does not
          look in that location, even if you try to place them there.
        </p>
        <p>
          Add to your "project locationmap". This is consulted first in the
          sequence of locationmaps, so you can cause Forrest to look for all
          project image files in certain specific locations. If it does not
          find them there, then it continues through the default locationmaps.
        </p>
        <p>
          So if you added your source images to a
          <code>resources/images/leaflet/</code> sub-directory, then add the following to your "project locationmap":
        </p>
        <source>
<![CDATA[<match pattern="project.images.**.*">
  <location src="{properties:resources.images}leaflet/{1}.{2}" />
</match>
]]></source>
        <p>
          Note that each locationmap match can try multiple locations in sequence.
        </p>
        <p>
          This "project locationmap" technique is useful for utilising multiple
          image/javascript/css libraries and keeping their resources separate.
        </p>
      </section>
    </section>
  </body>
</document>
