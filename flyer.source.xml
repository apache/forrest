<?xml version="1.0" encoding="ISO-8859-1"?><!--
  Copyright 2002-2005 The Apache Software Foundation or its licensors,
  as applicable.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
--><document>
  <header>
    <title>Apache Forrest: documentation framework</title>
  </header>
  <body>
    <p>
      Apache Forrest
      (<link href="site:forrest">forrest.apache.org</link>)
      is a publishing framework that transforms
      input from various sources into a unified presentation
      in one or more output formats. The modular and extensible
      plugin architecture is based on Apache Cocoon and relevant
      standards, which separates presentation from content.
      Forrest can generate static documents, or be used as a
      dynamic server, or be deployed by its automated facility.
    </p>
    <p>
      By <strong>separating content from
      presentation</strong>, providing <strong>content templates</strong>
      and <strong>pre-written skins</strong>, Forrest is unequalled at enabling
      content producers to get their message out fast.  This separation of
      concerns makes Forrest excellent
      to publish <strong>project documentation</strong> (notably software projects),
      <strong>intranets</strong>, and <strong>home pages</strong>.
    </p>
    <p>
      Forrest is
      built on one of the world's leading XML application frameworks, 
      <link href="ext:cocoon">Apache Cocoon</link>, which provides advanced
      users with extremely powerful publishing capabilities.
    </p>
    <ul>
      <li>Multiple task-specific source XML formats can be used
       (<link href="site:v0.70//howto">How-To</link>,
        <link href="site:v0.70//faq"><acronym title="Frequently Asked             Questions">FAQ</acronym></link>,
        <link href="site:v0.70//changes">changelogs</link> and
        <link href="site:v0.70//todo">todo lists</link> supported natively).
        Source formats include: Apache xdocs xml format, plain html
        documents, some Wiki formats, a subset of DocBook, ...
      </li>
      <li>Multiple output formats supported, for example HTML and PDF (using
        <link href="ext:fop">Apache FOP</link>).
      </li>
      <li>SVG to PNG rendering (using <link href="ext:batik">Apache
        Batik</link>). Simply drop the SVG in the appropriate directory
        and it will be rendered as PNG.</li>
      <li>
        Transparent inclusion and aggregation of external content, like
        <link href="site:v0.70//changes-rss">RSS feeds</link>.
      </li>
      <li>
        Anything else possible with the
        <link href="ext:cocoon/sitemap">Cocoon sitemap</link>.  Using database
        queries, <link href="ext:apache-stats">charting</link>, web services
        integration; the possibilities are constantly growing as Cocoon grows.
        See the <link href="ext:cocoon/features">Cocoon Features</link> list
        for the full suite of capabilities.
      </li>
      <li>
        Based on Java, Forrest is platform-independent, making for a
        documentation system that is just as portable as the XML data it
        processes.
      </li>
      <li>
        Your development team does not need Java experience, or even XML
        skills, to use Forrest. The framework lets you concentrate on
        content and design.
      </li>
    </ul>
    <p>
      Unique amongst comparable documentation tools, Forrest generates
      sites that can run both <strong>interactively</strong> as a dynamic
      web application, or as statically rendered pages.
      Running as a webapp has a major advantage during development:
      content can be written, and
      then the rendered output viewed almost instantly in a web browser.
      This <link href="site:v0.70//your-project/webapp">webapp technique</link>
      enables the edit/review cycle to be faster than command-line
      transformation tools.
    </p>
  </body>
</document>